/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    simsendx/SEQUIFOX Nextflow config file
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Default config options for all compute environments
----------------------------------------------------------------------------------------
*/

manifest {
    name            = 'simsendx/SEQUIFOX'
    author          = 'Stefan Filges'
    homePage        = 'https://github.com/simsendx/SEQUIFOX'
    description     = 'SEQUIFOX: Pipeline for ultrasensitive analysis of STR markers from targeted sequencing data'
    mainScript      = 'main.nf'
    nextflowVersion = '!>=24.10.4'
    version         = '0.1.0'
}

// Nextflow plugins
plugins {
  id 'nf-schema@2.4.1'
}

validation {
    help {
        enabled = true
    }
}

params {
    samplesheet         = null
    library_file        = null
    bed_file            = null
    ini_file            = null
    fasta               = null
    outdir              = 'results'
    publish_dir_mode    = 'copy'
    validate_params     = true
    fastp_save_merged   = true

    // FGBIO params
    read_structures            = '19M16S+T'
    groupreadsbyumi_strategy   = 'adjacency'
    groupreadsbyumi_edits      = 1
    call_min_reads             = 3   // default minimum input reads for fgbio's CALL*CONSENSUSREADS tools
    call_min_baseq             = 10   // default minimum input base quality for fgbio's CALL*CONSENSUSREADS tools
    filter_max_base_error_rate = 0.1 // default maximum raw-read error rate for fgbio's FILTERCONSENSUSREADS


    // FDStools params
    indel_score         = 2
    mismatches          = 0.1
    umi_length          = 19
    spacer_length       = 16
    min_read_length     = 100
    consensus_method    = 'most_common'
}

profiles {
    arm {
        docker.runOptions = '-u $(id -u):$(id -g) --platform=linux/amd64'
        podman.runOptions = '--platform=linux/amd64'
    }
    
    conda {
        conda.enabled          = true
        docker.enabled         = false
        singularity.enabled    = false
        podman.enabled         = false
    }

    docker {
        docker.enabled         = true
        podman.enabled         = false
        singularity.enabled    = false
    }

    podman {
        docker.enabled         = false
        podman.enabled         = true
        singularity.enabled    = false
    }

    singularity {
        docker.enabled         = false
        podman.enabled         = false
        singularity.enabled    = true
    }
}

// Define local containers
process {
    withName: 'FDSTOOLS_.*' {
        container = 'quay.io/sfilges/fdstools:2.1.1'
        executor = 'local'
    }

    withName: 'UMIERRORCORRECT_.*' {
        container = '0417b243d526'
        executor = 'local'
    }

    withLabel:process_single {
        cpus   = { 1                   }
        memory = { 4.GB * task.attempt }
        time   = { 4.h  * task.attempt }
    }
    withLabel:process_low {
        cpus   = { 2     * task.attempt }
        memory = { 8.GB * task.attempt }
        time   = { 4.h   * task.attempt }
    }
    withLabel:process_medium {
        cpus   = { 6     * task.attempt }
        memory = { 12.GB * task.attempt }
        time   = { 8.h   * task.attempt }
    }
}